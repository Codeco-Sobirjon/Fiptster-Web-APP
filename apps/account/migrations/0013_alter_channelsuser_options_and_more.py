# Generated by Django 5.2 on 2025-05-29 16:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0012_alter_userprofile_uuid'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='channelsuser',
            options={'verbose_name': 'User Channel', 'verbose_name_plural': 'User Channels'},
        ),
        migrations.AlterModelOptions(
            name='connecttochannel',
            options={'verbose_name': 'Channel Connection', 'verbose_name_plural': 'Channel Connections'},
        ),
        migrations.AlterModelOptions(
            name='customuser',
            options={'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AlterModelOptions(
            name='referals',
            options={'verbose_name': 'Referral', 'verbose_name_plural': 'Referrals'},
        ),
        migrations.AlterModelOptions(
            name='referalspoints',
            options={'verbose_name': 'Referral Points', 'verbose_name_plural': 'Referral Points'},
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'verbose_name': 'User Profile', 'verbose_name_plural': 'User Profiles'},
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='channel_coin',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Channel Coin'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='channel_link',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Channel URL'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='channel_name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Channel Name'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='channel_type',
            field=models.CharField(choices=[('Youtube', 'Youtube'), ('Telegram', 'Telegram'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Facebook', 'Facebook')], default='Youtube', max_length=50, verbose_name='Channel Type'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='created_at',
            field=models.DateField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='secret_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Secret Code'),
        ),
        migrations.AlterField(
            model_name='channelsuser',
            name='task_type',
            field=models.CharField(choices=[('FIPT Youtube', 'FIPT Youtube'), ('Task List', 'Task List')], default='FIPT Youtube', max_length=50, verbose_name='Task Type'),
        ),
        migrations.AlterField(
            model_name='connecttochannel',
            name='channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connect_channel', to='account.channelsuser', verbose_name='Channel'),
        ),
        migrations.AlterField(
            model_name='connecttochannel',
            name='created_at',
            field=models.DateField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='First Name'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group', verbose_name='Groups'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='invited',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_users', to=settings.AUTH_USER_MODEL, verbose_name='Invited By'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='is_sound',
            field=models.BooleanField(default=True, verbose_name='Sound Enabled'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='is_staff',
            field=models.BooleanField(default=False, verbose_name='Staff'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='last_name',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Last Name'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='tg_id',
            field=models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='Telegram ID'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission', verbose_name='Permissions'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='username',
            field=models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Username'),
        ),
        migrations.AlterField(
            model_name='referals',
            name='created_at',
            field=models.DateField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='referals',
            name='invited_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invited_user', to=settings.AUTH_USER_MODEL, verbose_name='Invited User'),
        ),
        migrations.AlterField(
            model_name='referalspoints',
            name='created_at',
            field=models.DateField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='referalspoints',
            name='points',
            field=models.DecimalField(decimal_places=1, default=0, max_digits=10, verbose_name='Points'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='coin',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=10, null=True, verbose_name='Coins'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='coin_level',
            field=models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Coin Level'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='created_at',
            field=models.DateField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='earn_per_tab',
            field=models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Earnings per Tab'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='profile_type',
            field=models.CharField(choices=[('Rookie Voyeur', 'Rookie Voyeur'), ('Late-Night Scroller', 'Late-Night Scroller'), ('Naughty Subscriber', 'Naughty Subscriber'), ('Private Teaser', 'Private Teaser'), ('Erotic Enthusiast', 'Erotic Enthusiast'), ('XXX VIP', 'XXX VIP'), ('Hardcore Legend', 'Hardcore Legend'), ('Kink Master', 'Kink Master'), ('Adult Insider', 'Adult Insider'), ('Exclusive Pleasure-Seeker', 'Exclusive Pleasure-Seeker'), ('FIPT Legend', 'FIPT Legend')], default='Rookie Voyeur', max_length=50, verbose_name='Profile Type'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='profit_per_hour',
            field=models.FloatField(blank=True, default=0, null=True, verbose_name='Profit per Hour'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('510bed95-13fb-4036-bfb4-7281bcd47d06'), editable=False, primary_key=True, serialize=False, verbose_name='UUID'),
        ),
    ]
