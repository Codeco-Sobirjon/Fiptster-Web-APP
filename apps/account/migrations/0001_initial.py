# Generated by Django 5.2 on 2025-05-10 17:19

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelsUser',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('channel_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя канала')),
                ('channel_coin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Канал монет')),
                ('channel_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL канала')),
                ('secret_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Секретный код')),
                ('task_type', models.CharField(choices=[('FIPT Youtube', 'FIPT Youtube'), ('Task List', 'Task List')], default='FIPT Youtube', max_length=50, verbose_name='Тип задачи')),
                ('channel_type', models.CharField(choices=[('Youtube', 'Youtube'), ('Telegram', 'Telegram'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Facebook', 'Facebook')], default='Youtube', max_length=50, verbose_name='Тип канала')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Каналы пользователя',
                'verbose_name_plural': 'Каналы пользователей',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('tg_id', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='Телеграм ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Электронная почта')),
                ('username', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group', verbose_name='Группы')),
                ('invited', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_users', to=settings.AUTH_USER_MODEL, verbose_name='Пригласил')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission', verbose_name='Разрешения')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='ConnectToChannel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connect_channel', to='account.channelsuser', verbose_name='Канал')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connect_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подключение к каналу',
                'verbose_name_plural': 'Подключения к каналам',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('32d06b8d-f12d-4cf3-8819-1729a45c5c71'), editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('earn_per_tab', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Заработок за вкладку')),
                ('coin_level', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Уровень монеты')),
                ('profit_per_hour', models.FloatField(blank=True, default=0, null=True, verbose_name='Прибыль в час')),
                ('coin', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=10, null=True, verbose_name='Монета')),
                ('profile_type', models.CharField(choices=[('Rookie Voyeur', 'Rookie Voyeur  Voyeur'), ('Late-Night Scroller', 'Late-Night Scroller'), ('Naughty Subscriber', 'Naughty Subscriber'), ('Private Teaser', 'Private Teaser'), ('Erotic Enthusiast', 'Erotic Enthusiast'), ('XXX VIP', 'XXX VIP'), ('Hardcore Legend', 'Hardcore Legend'), ('Kink Master', 'Kink Master'), ('Adult Insider', 'Adult Insider'), ('Exclusive Pleasure-Seeker', 'Exclusive Pleasure-Seeker'), ('FIPT Legend', 'FIPT Legend')], default='Rookie Voyeur', max_length=50, verbose_name='Тип профиля')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_profile/', verbose_name='Изображение')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
    ]
